#Oracle开发环境
db.driverClassName = oracle.jdbc.driver.OracleDriver
db1.url = jdbc:oracle:thin:@192.168.227.80:1521:platora
db1.username=mypayment_shard1
db1.password=mypayment_shard1
#
#
db2.url = jdbc:oracle:thin:@192.168.227.80:1521:platora
db2.username = mypayment_shard2
db2.password =mypayment_shard2
#
db3.url = jdbc:oracle:thin:@192.168.227.80:1521:platora
db3.username = mypayment_shard3
db3.password =mypayment_shard3
#
#db4.url = jdbc:oracle:thin:@192.168.227.80:1521:platoradb
#db4.username = mypayment_shard3
#db4.password =mypayment_shard3

#本地Mysql测试
mysql.driverClassName=com.mysql.jdbc.Driver
mysql.url=jdbc:mysql://localhost:3306/dbtest1
mysql.username=root
mysql.password=root
##初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3
pay.initialPoolSize=10
##连接池中保留的最小连接数
pay.minPoolSize=5

##连接池中保留的最大连接数,Default: 15
pay.maxPoolSize=30
##最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
pay.maxIdleTime=30
##当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
pay.acquireIncrement=5
##每60秒检查所有连接池中的空闲连接。Default: 0
pay.idleConnectionTestPeriod=60
##定义在从数据库获取新连接失败后重复尝试的次数。Default: 30
pay.acquireRetryAttempts=20
##获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
##保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
##获取连接失败后该数据源将申明已断开并永久关闭。Default: false
pay.breakAfterAcquireFailure=true
##JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
##属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
##如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0
pay.maxStatements=0
##因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
##时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
##等方法来提升连接测试的性能。Default: false
pay.testConnectionOnCheckout=false

mysql1.driverClassName=com.mysql.jdbc.Driver
mysql1.url=jdbc:mysql://localhost:3306/dbtest2
mysql1.username=root
mysql1.password=root

#db3.url=jdbc:mysql://localhost:3306/dbtest3
#db3.username=root
#db3.password=root