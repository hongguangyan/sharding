<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
       default-autowire="byName">
    <import resource="spring-test-datasoruce.xml"/>
    <context:property-placeholder location="classpath:db.properties"/>
    
<!--
    <bean id="dataSource1" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db2.url}"/>
        <property name="username" value="${db2.username}"/>
        <property name="password" value="${db2.password}"/>
    </bean>-->

   <!-- <bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db3.url}"/>
        <property name="username" value="${db3.username}"/>
        <property name="password" value="${db3.password}"/>
    </bean>
-->
<!--    <bean id="dynamicDataSource" class="com.simplemple.payment.sharding.dataSource.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <entry key="0" value-ref="dataSource"/>
                <entry key="1" value-ref="dataSource1"/>
                &lt;!&ndash;<entry key="2" value-ref="dataSource2"/>&ndash;&gt;
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource"/>
    </bean>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="configLocation" value="classpath:mybatis/mybatis-config-base.xml"/>
        </bean>
    <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource1"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config-base.xml"/>
    </bean>
   <!-- <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource2"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config-base.xml"/>
    </bean>-->

    <!-- 动态切换SqlSessionFactory  -->
    <bean id="dynamicSqlSessionDaoSupport" class="com.simple.payment.sharding.dataSource.DynamicSqlSessionDaoSupport">
        <property name="targetSqlSessionFactorys">
            <map value-type="org.apache.ibatis.session.SqlSessionFactory">
                <entry key="0" value-ref="sqlSessionFactory"/>
                <entry key="1" value-ref="sqlSessionFactory1"/>
               <!-- <entry key="2" value-ref="sqlSessionFactory2"/>-->
            </map>
        </property>
        <property name="defaultTargetSqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <!---->
    <bean id="shardingTemplate" class="com.simple.payment.sharding.service.impl.ShardingTemplate">
        <property name="dynamicDataSource" ref="dynamicDataSource"/>
        <property name="dynamicSqlSessionDaoSupport" ref="dynamicSqlSessionDaoSupport"/>
    </bean>


    <bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource1"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--分布式事务配置-->
    <bean id="shardingTransactionTemplate" class="com.simple.payment.sharding.service.impl.ShardingTransactionTemplate">
        <property name="multiTransactionManager">
            <ref bean="multiTransactionManager"/>
        </property>
    </bean>

    <bean id="multiTransactionManager" class="com.simple.payment.sharding.tx.MultiTransactionManager">
        <constructor-arg index="0">
            <list>
                <ref bean="transactionManager"/>
                <ref bean="transactionManager1"/>
                <!--<ref bean="transactionManager2"/>-->
            </list>
        </constructor-arg>
    </bean>
      <bean id="multiTransactionStatus" class="com.simple.payment.sharding.tx.MultiTransactionStatus">
        <constructor-arg index="0">
            <ref bean="multiTransactionManager"></ref>
        </constructor-arg>
    </bean>


</beans>